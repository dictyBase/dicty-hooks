{"version":3,"file":"dicty-hooks.cjs.development.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/data/footer.ts","../src/hooks/useFooter.ts","../src/data/navbar.ts","../src/hooks/useNavbar.ts","../src/hooks/useFetchRefreshToken.ts","../src/hooks/useIntersectionObserver.ts","../src/hooks/useVirtualList.ts"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","const footerItems = [\n  [\n    {\n      header: { description: \"Genomes\" },\n      items: [\n        { link: \"/\", description: \"Dictyostelium discoideum\" },\n        {\n          link: \"http://genomes.dictybase.org/purpureum\",\n          description: \"Dictyostelium purpureum\",\n        },\n        {\n          link: \"http://genomes.dictybase.org/fasciculatum\",\n          description: \"Dictyostelium fasciculatum\",\n        },\n        {\n          link: \"http://genomes.dictybase.org/pallidum\",\n          description: \"Polysphondylium pallium\",\n        },\n      ],\n    },\n  ],\n  [\n    {\n      header: { description: \"Tools\" },\n      items: [\n        {\n          description: \"Genome Browser\",\n          link:\n            \"http://dictybase.org/tools/jbrowse/?data=data/jbrowse/discoideum&loc=6:1..50011&tracks=reference,gene,transcript\",\n        },\n        {\n          description: \"Dashboard\",\n          link: \"/dictyaccess\",\n        },\n      ],\n    },\n  ],\n  [\n    {\n      header: { description: \"Explore\" },\n      items: [\n        { link: \"/explore/art\", description: \"Dicty Art\" },\n        { link: \"/explore/gallery\", description: \"Gallery\" },\n        {\n          link: \"/explore/learn\",\n          description: \"Learn About Dicty\",\n        },\n        {\n          link: \"/explore/teach\",\n          description: \"Teaching Protocols\",\n        },\n        { link: \"/explore/links\", description: \"Useful Links\" },\n      ],\n    },\n  ],\n  [\n    {\n      header: { description: \"Research\" },\n      items: [\n        { link: \"/research/ontology\", description: \"Anatomy Ontology\" },\n        { link: \"/research/codon\", description: \"Codon Bias Table\" },\n        {\n          link: \"/research/nomenclature\",\n          description: \"Nomenclature Guidelines\",\n        },\n        { link: \"/research/phenotyping\", description: \"Phenotyping\" },\n        { link: \"/research/techniques\", description: \"Techniques\" },\n      ],\n    },\n  ],\n  [\n    {\n      header: { description: \"Dicty Stock Center\" },\n      items: [\n        {\n          description: \"Stock Center Home\",\n          link: \"/stockcenter\",\n        },\n        {\n          description: \"Order Information\",\n          link: \"/stockcenter/information/order\",\n        },\n        {\n          description: \"FAQ\",\n          link: \"/stockcenter/information/faq\",\n        },\n      ],\n    },\n  ],\n  [\n    {\n      header: { description: \"Community\" },\n      items: [\n        {\n          description: \"Cite Us\",\n          link: \"/community/citation\",\n        },\n        {\n          description: \"Dicty Annual Conferences\",\n          link: \"/community/conference\",\n        },\n        {\n          description: \"Dicty Email Forum\",\n          link: \"/community/listserv\",\n        },\n        {\n          description: \"Dicty Labs\",\n          link: \"/community/labs\",\n        },\n        {\n          description: \"History\",\n          link: \"/community/history\",\n        },\n        {\n          description: \"Jobs\",\n          link: \"/community/jobs\",\n        },\n        {\n          description: \"Upcoming Meetings\",\n          link: \"/community/meetings\",\n        },\n      ],\n    },\n  ],\n  [\n    {\n      header: { description: \"Please Cite\" },\n      items: [\n        { description: \"dictyBase\", link: \"\" },\n        {\n          description: \"Dicty Stock Center\",\n          link: \"/stockcenter\",\n        },\n      ],\n    },\n  ],\n  [\n    {\n      header: { description: \"Supported By\" },\n      items: [\n        { description: \"NIH\", link: \"https://www.nih.gov/\" },\n        { description: \"GMOD\", link: \"http://gmod.org/wiki/Main_Page\" },\n        { description: \"Gene Ontology\", link: \"http://www.geneontology.org/\" },\n      ],\n    },\n  ],\n]\n\nexport default footerItems\n","import { useEffect, useState } from \"react\"\nimport footerItems from \"../data/footer\"\n\ntype FooterJson = {\n  data: Array<{\n    attributes: {\n      display: string\n      items: Array<Item>\n    }\n  }>\n}\n\ntype Item = {\n  label: string\n  link: string\n}\n\ntype FooterArray = Array<\n  Array<{\n    header: {\n      description: string\n    }\n    items: Array<{\n      description: string\n      link: string\n    }>\n  }>\n>\n\nconst footerUrl = process.env.REACT_APP_FOOTER_JSON || \"\"\n\n/**\n * formatFooterItems is a helper function to convert the links\n * under each header into the accepted footer data format.\n */\nconst formatFooterItems = (items: Array<Item>) =>\n  items.map(c => ({\n    description: c.label,\n    link: c.link,\n  }))\n\n/**\n * formatFooterData converts the received footer JSON data and\n * converts it into the dicty-footer data format.\n */\nconst formatFooterData = (json: FooterJson) =>\n  json.data.map(item => [\n    {\n      header: {\n        description: item.attributes.display,\n      },\n      items: formatFooterItems(item.attributes.items),\n    },\n  ])\n\n/**\n * useFooter is a hook for fetching dictyBase footer\n * JSON data. It uses an included array of data as its\n * initial state then replaces it with fetched data\n * on a successful request.\n */\n\nconst useFooter = () => {\n  const [footerData, setFooterData] = useState<FooterArray>(footerItems)\n  const [error, setError] = useState<null | string>(null)\n\n  useEffect(() => {\n    const fetchFooter = async () => {\n      try {\n        const res = await fetch(footerUrl)\n        const json = await res.json()\n        if (res.ok) {\n          const footerArr = formatFooterData(json)\n          setFooterData(footerArr)\n        } else {\n          setError(res.statusText)\n        }\n      } catch (error) {\n        setError(error.toString())\n      }\n    }\n    fetchFooter()\n  }, [])\n\n  return { footerData, error }\n}\n\nexport { formatFooterData }\nexport default useFooter\n","const navbarItems = [\n  {\n    dropdown: true,\n    title: \"Genomes\",\n    items: [\n      {\n        name: \"Dictyostelium discoideum\",\n        href: \"/\",\n      },\n      {\n        name: \"Dictyostelium purpureum\",\n        href: \"http://genomes.dictybase.org/purpureum\",\n      },\n      {\n        name: \"Dictyostelium fasciculatum\",\n        href: \"http://genomes.dictybase.org/fasciculatum\",\n      },\n      {\n        name: \"Polysphondylium pallium\",\n        href: \"http://genomes.dictybase.org/pallidum\",\n      },\n    ],\n  },\n  {\n    dropdown: true,\n    title: \"Tools\",\n    items: [\n      {\n        name: \"Genome Browser\",\n        href:\n          \"http://dictybase.org/tools/jbrowse/?data=data/jbrowse/discoideum&loc=6:1..50011&tracks=reference,gene,transcript\",\n      },\n      {\n        name: \"Dashboard\",\n        href: \"/dictyaccess\",\n      },\n    ],\n  },\n  {\n    dropdown: true,\n    title: \"Explore\",\n    items: [\n      {\n        name: \"Dicty Art\",\n        href: \"/explore/art\",\n      },\n      {\n        name: \"Gallery\",\n        href: \"/explore/gallery\",\n      },\n      {\n        name: \"Learn About Dicty\",\n        href: \"/explore/learn\",\n      },\n      {\n        name: \"Teaching Protocols\",\n        href: \"/explore/teach\",\n      },\n      {\n        name: \"Useful Links\",\n        href: \"/explore/links\",\n      },\n    ],\n  },\n  {\n    dropdown: true,\n    title: \"Research\",\n    items: [\n      {\n        name: \"Anatomy Ontology\",\n        href: \"/research/ontology\",\n      },\n      {\n        name: \"Codon Bias Table\",\n        href: \"/research/codon\",\n      },\n      {\n        name: \"Nomenclature Guidelines\",\n        href: \"/research/nomenclature\",\n      },\n      {\n        name: \"Phenotyping\",\n        href: \"/research/phenotyping\",\n      },\n      {\n        name: \"Techniques\",\n        href: \"/research/techniques\",\n      },\n    ],\n  },\n  {\n    dropdown: true,\n    title: \"Dicty Stock Center\",\n    items: [\n      {\n        name: \"Stock Center Home\",\n        href: \"/stockcenter\",\n      },\n      {\n        name: \"Order Information\",\n        href: \"/stockcenter/information/order\",\n      },\n      {\n        name: \"Deposit Information\",\n        href: \"/stockcenter/information/deposit\",\n      },\n      {\n        name: \"Payment Information\",\n        href: \"/stockcenter/information/payment\",\n      },\n      {\n        name: \"FAQ\",\n        href: \"/stockcenter/information/faq\",\n      },\n      {\n        name: \"Strain Catalog\",\n        href: \"/stockcenter/strains\",\n      },\n      {\n        name: \"Plasmid Catalog\",\n        href: \"/stockcenter/plasmids\",\n      },\n    ],\n  },\n  {\n    dropdown: true,\n    title: \"Community\",\n    items: [\n      {\n        name: \"Cite Us\",\n        href: \"/community/citation\",\n      },\n      {\n        name: \"Dicty Annual Conferences\",\n        href: \"/community/conference\",\n      },\n      {\n        name: \"Dicty Email Forum\",\n        href: \"/community/listserv\",\n      },\n      {\n        name: \"Dicty Labs\",\n        href: \"/community/labs\",\n      },\n      {\n        name: \"History\",\n        href: \"/community/history\",\n      },\n      {\n        name: \"Jobs\",\n        href: \"/community/jobs\",\n      },\n      {\n        name: \"Upcoming Meetings\",\n        href: \"/community/meetings\",\n      },\n    ],\n  },\n]\n\nexport default navbarItems\n","import { useEffect, useState } from \"react\"\nimport navbarItems from \"../data/navbar\"\n\ntype NavbarJson = {\n  data: Array<{\n    id: string\n    type: string\n    attributes: {\n      display: string\n      items: Array<Item>\n    }\n  }>\n}\n\ntype Item = {\n  label: string\n  link: string\n}\n\ntype NavbarArray = Array<{\n  dropdown: boolean\n  title: string\n  items: Array<{\n    name: string\n    href: string\n  }>\n}>\n\nconst navbarUrl = process.env.REACT_APP_NAVBAR_JSON || \"\"\n\n/**\n * formatNavbarItems is a helper function to convert the links\n * under each header into the accepted navbar data format.\n */\nconst formatNavbarItems = (items: Array<Item>) =>\n  items.map(c => ({\n    name: c.label,\n    href: c.link,\n  }))\n\n/**\n * formatNavbarData converts the received navbar JSON data and\n * converts it into the dicty-navbar data format.\n */\nconst formatNavbarData = (json: NavbarJson) =>\n  json.data.map(item => ({\n    dropdown: true,\n    title: item.attributes.display,\n    items: formatNavbarItems(item.attributes.items),\n  }))\n\n/**\n * useNavbar is a hook for fetching dictyBase navbar\n * JSON data. It uses an included data array as its\n * initial state then replaces it with fetched data\n * on a successful request.\n */\n\nconst useNavbar = () => {\n  const [navbarData, setNavbarData] = useState<NavbarArray>(navbarItems)\n  const [error, setError] = useState<null | string>(null)\n\n  useEffect(() => {\n    const fetchNavbar = async () => {\n      try {\n        const res = await fetch(navbarUrl)\n        const json = await res.json()\n        if (res.ok) {\n          setNavbarData(formatNavbarData(json))\n        } else {\n          setError(res.statusText)\n        }\n      } catch (error) {\n        setError(error.toString())\n      }\n    }\n    fetchNavbar()\n  }, [])\n\n  return { navbarData, error }\n}\n\nexport { formatNavbarData }\nexport default useNavbar\n","import { useEffect } from \"react\"\n\n/**\n * useFetchRefreshToken fires off a callback function on\n * mount, then executes the callback at a specified interval\n * if isAuthenticated is true. This is used to silently fetch\n * a refresh token in the background.\n *\n * More info: https://hasura.io/blog/best-practices-of-using-jwt-with-graphql/#silent_refresh\n */\n\nconst useFetchRefreshToken = (\n  callback: Function,\n  intervalRef: React.MutableRefObject<any>,\n  delay: number,\n  isAuthenticated: boolean,\n) => {\n  useEffect(() => {\n    callback()\n  }, [callback])\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      return\n    }\n\n    intervalRef.current = setInterval(() => {\n      callback()\n    }, delay)\n\n    return () => clearInterval(intervalRef.current)\n  }, [callback, intervalRef, delay, isAuthenticated])\n}\n\nexport default useFetchRefreshToken\n","import React from \"react\"\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n\ntype ConfigParams = {\n  /** React ref used to access DOM node */\n  ref: React.MutableRefObject<any>\n  /** Margin around the root */\n  rootMargin?: string\n  /** Indicates the percentage of the target's visibility the observer's\n   * callback should be executed */\n  threshold?: number\n  /** Indicates whether there are more items to fetch */\n  hasMore: boolean\n}\n\nconst useIntersectionObserver = ({\n  ref,\n  rootMargin = \"0px\",\n  threshold = 0.25,\n  hasMore,\n}: ConfigParams) => {\n  const [intersecting, setIntersecting] = React.useState(false)\n\n  React.useEffect(() => {\n    const callback = (entries: IntersectionObserverEntry[]) => {\n      if (hasMore) {\n        setIntersecting(entries[0].isIntersecting)\n      }\n    }\n\n    const observer = new IntersectionObserver(callback, {\n      rootMargin: rootMargin,\n      threshold: threshold,\n    })\n    const target = ref.current\n    observer.observe(target)\n\n    return () => observer.unobserve(target)\n  }, [hasMore, intersecting, ref, rootMargin, threshold])\n\n  return intersecting\n}\n\nexport default useIntersectionObserver\n","import React from \"react\"\n\n// reference: https://medium.com/ingeniouslysimple/building-a-virtualized-list-from-scratch-9225e8bec120\n\ntype ConfigParams = {\n  /** React ref used to access DOM node */\n  ref: React.MutableRefObject<any>\n  /** Height of the scrollable area (inner container) */\n  viewportHeight: number\n  /** Height of individual row */\n  rowHeight: number\n  /** Number of items in total */\n  numItems: number\n  /** Number of elements to render above and below viewport */\n  overscan?: number\n}\n\nconst useVirtualList = ({\n  ref,\n  viewportHeight,\n  rowHeight,\n  numItems,\n  overscan,\n}: ConfigParams) => {\n  /**\n   * scrollTop measures how far the inner container is scrolled.\n   * It is the difference between the total list height and the viewport\n   * height.\n   */\n  const [scrollTop, setScrollTop] = React.useState(0)\n\n  let startIndex = Math.floor(scrollTop / rowHeight)\n  let endIndex = Math.min(\n    numItems - 1, // don't render past the end of the list\n    Math.floor((scrollTop + viewportHeight) / rowHeight),\n  )\n\n  if (overscan) {\n    // take zero or the index minus overscan, whichever is higher\n    startIndex = Math.max(0, startIndex - overscan)\n    // if end of list, don't display the extra elements\n    endIndex = Math.min(numItems - 1, endIndex + overscan)\n  }\n\n  const items = []\n  for (let i = startIndex; i <= endIndex; i++) {\n    items.push({\n      // index is required so we know the exact row of data to display\n      index: i,\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: `${rowHeight}px`,\n        transform: `translateY(${i * rowHeight}px)`,\n      },\n    })\n  }\n\n  const handleScroll = (event: React.UIEvent<HTMLElement>) => {\n    setScrollTop(event.currentTarget.scrollTop)\n  }\n\n  React.useEffect(() => {\n    if (ref && ref.current) {\n      const element = ref.current\n      element.onscroll = handleScroll\n    }\n  }, [ref])\n\n  return { items }\n}\n\nexport default useVirtualList\n"],"names":["footerItems","header","description","items","link","footerUrl","process","env","REACT_APP_FOOTER_JSON","formatFooterItems","map","c","label","formatFooterData","json","data","item","attributes","display","useFooter","useState","footerData","setFooterData","error","setError","useEffect","fetchFooter","fetch","res","ok","footerArr","statusText","toString","navbarItems","dropdown","title","name","href","navbarUrl","REACT_APP_NAVBAR_JSON","formatNavbarItems","formatNavbarData","useNavbar","navbarData","setNavbarData","fetchNavbar","useFetchRefreshToken","callback","intervalRef","delay","isAuthenticated","current","setInterval","clearInterval","useIntersectionObserver","ref","rootMargin","threshold","hasMore","React","intersecting","setIntersecting","entries","isIntersecting","observer","IntersectionObserver","target","observe","unobserve","useVirtualList","viewportHeight","rowHeight","numItems","overscan","scrollTop","setScrollTop","startIndex","Math","floor","endIndex","min","max","i","push","index","style","position","top","left","width","height","transform","handleScroll","event","currentTarget","element","onscroll"],"mappings":"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"}